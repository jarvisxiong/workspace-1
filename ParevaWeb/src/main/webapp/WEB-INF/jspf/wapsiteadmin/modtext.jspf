<%@include file="/WEB-INF/jspf/coreimport.jspf"%>
<%@include file="/WEB-INF/jspf/db.jspf"%>
<%

//***************************************************************************************************
AdminRequest aReq = new AdminRequest(request);
String uid = aReq.getUserId();
String ugid = aReq.getUserGroup();
String anyxSrvc = aReq.getAnyxService();
String domain = aReq.getDomain();
String lang = aReq.getLanguage();
String stylesheet = aReq.getStyleSheet();
String pageEnc = aReq.getPageEnc();
response.setContentType("text/html; charset=" + pageEnc);

String fileName = "modtext";
//***************************************************************************************************
String imageDir = System.getProperty("document_root") + "/images/javagames/promos/";
boolean keepOldFormat = true;
String imgFormat = "gif";

String srvc = aReq.get("srvc");
String save = aReq.get("save");
String updpic = Misc.hex8Decode(aReq.get("updpic"));
String pic = aReq.get("pic");
String delpic = aReq.get("delpic");
String restype1 = aReq.get("restype1");
String restype2 = aReq.get("restype2");
String restype = "";

String dm = Misc.getCookie("_MXMDOMAINUNIQUE", request);
String subpage = Misc.getCookie("_MXMSUBPAGEUNIQUE", request);

if (dm.equals("") || srvc.equals("")) { out.println("domain / service missing"); return; }

Query query=null, query2=null;
Transaction trans=dbsession.beginTransaction();
String sqlstr = "";
String statusMsg ="";
String statusMsg2 = "";
String[] props = null;
String[] pprops = null;
String[] gprops = null;
String[] dprops = null;

String promoUnique = "";
boolean resample = false;
String srvcTitle = "";
String domainName = "";

Enumeration e = request.getParameterNames();
for (;e.hasMoreElements();) {
    String elem = (String) e.nextElement();
    if (elem.startsWith("res_")) {
        resample = true;
        promoUnique = elem.substring(4);
        restype = restype1;
        break;
    }
    else if (elem.startsWith("res2_")) {
        resample = true;
        promoUnique = elem.substring(5) + "_prm";
        restype = restype2;
        break;
    }
} 

System.out.println("res: " + resample); 

if (!delpic.equals("")) {
    
    File ff = new File(imageDir + Misc.hex8Decode(delpic));
    System.out.println("ff: " + ff);
    if (ff.exists() && !ff.isDirectory()) ff.delete();
    sqlstr = "UPDATE clientPromoImages SET aImage='',aWidth='0',aHeight='0' WHERE aUnique='" + pic + "'";
    System.out.println(sqlstr);
    query=dbsession.createSQLQuery(sqlstr);
    int stat=query.executeUpdate();
}
else if (resample) {
    
    try { 
        String src = aReq.get("resrc_" + promoUnique);             
        System.out.println("SRC: " + src);
        String newimg = "";
        BufferedImage orgImg = null;
        BufferedImage srcimg = ImageIO.read(new File(imageDir + src));

        sqlstr = "SELECT * FROM clientPromoImages WHERE aPromoUnique='" + promoUnique + "'";
        System.out.println(sqlstr);
        query=dbsession.createSQLQuery(sqlstr).addScalar("aImage");
        java.util.List result=query.list();    
        for(Object o:result) {        
            File oldimg = new File(imageDir + o.toString());
            System.out.println(oldimg);
            if (oldimg.exists()) oldimg.delete();
        }
       

        if (keepOldFormat) {
            if (src.endsWith(".gif")) imgFormat = "gif";
            else if (src.endsWith(".png")) imgFormat = "png";
            else if (src.endsWith(".jpg")) imgFormat = "jpg";
        }

        int sizeIndex = 3;
        if (restype.equals("full")) sizeIndex = 3;
        else if (restype.equals("shot")) sizeIndex = 4;
        else if (restype.equals("thumb")) sizeIndex = 5;
        else if (restype.equals("icon")) sizeIndex = 6;

        for (int i=4; i>0; i--) {
            newimg = Misc.generateUniqueId() + "." + imgFormat;
            ImageResize.resample(srcimg, imageDir + newimg, (((Integer[])SdkTempCache.xhtmlProfiles.get(i-1))[sizeIndex]).intValue(), -1);
            System.out.println(i + ": " + new File(imageDir + newimg));
            orgImg = ImageIO.read(new File(imageDir + newimg));
            int iw = orgImg.getWidth(null);
            int ih = orgImg.getHeight(null);

            sqlstr = "UPDATE clientPromoImages SET aImage='" + newimg + "', aWidth='" + iw + "',aHeight='" + ih + "' WHERE aPromoUnique='" + promoUnique + "' AND aProfile='" + i + "'";
            query=dbsession.createSQLQuery(sqlstr);
            int stat=query.executeUpdate();    
        }
    } catch (Exception ee) { System.out.println(ee);ee.printStackTrace(); }
}
else if (!updpic.equals("")) { 
    
    sqlstr = "SELECT * FROM clientPromoImages WHERE aUnique='" + pic + "'";
    System.out.println(sqlstr);
    query=dbsession.createSQLQuery(sqlstr).addScalar("aImage");
    java.util.List result1=query.list();
    if (result1.size()>0) {
       for(Object o1:result1) {              
        File oldimg = new File(imageDir + o1.toString());
        if (oldimg.exists()) oldimg.delete();
               }
    }
   
    
    if (keepOldFormat) {
        if (updpic.endsWith(".gif")) imgFormat = "gif";
        else if (updpic.endsWith(".png")) imgFormat = "png";
        else if (updpic.endsWith(".jpg")) imgFormat = "jpg";
    }
          
    BufferedImage orgImg = ImageIO.read(new File(imageDir + "source/" + updpic));
    int iw = orgImg.getWidth(null);
    int ih = orgImg.getHeight(null);
    
    String newimg = Misc.generateUniqueId() + "." + imgFormat;
    
    if (updpic.toLowerCase().endsWith("." + imgFormat)) { System.out.println(imageDir + newimg);
        FileUtil.copyFile(imageDir + "source/" + updpic, imageDir + newimg); }
    //else if (updpic.toLowerCase().endsWith(".jpg")) { newimg += ".jpg"; FileUtil.copyFile(imageDir + "source/" + updpic, imageDir + newimg); }
    else {
        System.out.println("Resampling from original.");        
        ImageResize.resample(orgImg, imageDir + newimg, iw, ih);
    }       
    
    sqlstr = "UPDATE clientPromoImages SET aImage='" + newimg + "', aWidth='" + iw + "', aHeight='" + ih + "' WHERE aUnique='" + pic + "'";
    System.out.println(sqlstr);
    query=dbsession.createSQLQuery(sqlstr);
    int stat=query.executeUpdate();    
}
else if (!save.equals("")) { 
   
   String title = aReq.get("title");
   String body = aReq.get("body");
   
   sqlstr = "UPDATE clientFreeTexts SET aTitle='" + Misc.encodeForDb(title) + "',aBody='" + Misc.encodeForDb(body) + "'"
            + " WHERE aServiceUnique='" + srvc + "' AND aDomain='" + dm + "'";
   System.out.println(sqlstr);
   query=dbsession.createSQLQuery(sqlstr);
    int stat=query.executeUpdate();
        
}

java.util.List dms = new ArrayList();
sqlstr = "SELECT * FROM domains WHERE aDomainUnique!='fjq32V44EqwaKUb' AND aActive='1'";
query=dbsession.createSQLQuery(sqlstr).addScalar("aDomainUnique").addScalar("aName");
java.util.List result2=query.list();
for(Object o2:result2) {
    Object[] row2=(Object[]) o2;
    String domainunique=String.valueOf(row2[0]);
    
    if (domainunique.equals(dm)) { domainName = String.valueOf(row2[1]); break; }
 }

Hashtable pics = new Hashtable();

if (!dm.equals("") && !srvc.equals("")) {
      
    props = new String[3];
    for (int k=0; k<props.length; k++) props[k] = "";

    sqlstr = "SELECT * FROM clientFreeTexts WHERE aServiceUnique='" + srvc + "' AND aDomain='" + dm + "'";
    System.out.println(sqlstr);
    query=dbsession.createSQLQuery(sqlstr).addScalar("aUnique").addScalar("aTitle").addScalar("aBody");
    java.util.List result3=query.list();
    if (result3.size()>0) {
        for(Object o3:result3){
            Object[] row3=(Object[]) o3;
        props[0] = String.valueOf(row3[0]);
        props[1] = String.valueOf(row3[1]);
        props[2] = String.valueOf(row3[2]);
            }
               }
    else {
        props[0] = Misc.generateUniqueId();
        sqlstr = "INSERT INTO clientFreeTexts VALUES('" + props[0] + "','" + srvc + "','" + dm + "','','')";  
        System.out.println(sqlstr);
        query=dbsession.createSQLQuery(sqlstr);
        int stat=query.executeUpdate();
    }
   
    
    
    for (int g=1; g<5; g++) {
        pprops = new String[4];
        for (int k=0; k<pprops.length; k++) pprops[k] = "";

        sqlstr = "SELECT * FROM clientPromoImages WHERE aPromoUnique='" + props[0] + "' AND aProfile='" + g + "'";
        System.out.println(sqlstr);
        query=dbsession.createSQLQuery(sqlstr).addScalar("aUnique").addScalar("aImage").addScalar("aWidth").addScalar("aHeight");
        java.util.List result4=query.list();
        if (result4.size()>0) {
                for(Object o4:result4){
                    Object[] row4=(Object[]) o4;
            pprops[0] = String.valueOf(row4[0]);
            pprops[1] = String.valueOf(row4[1]);
            pprops[2] = String.valueOf(row4[2]);
            pprops[3] = String.valueOf(row4[3]);
        }
               }
        else {
            pprops[0] = Misc.generateUniqueId();
            sqlstr = "INSERT INTO clientPromoImages VALUES('" + pprops[0] + "','" + props[0] + "','" + g + "','','0','0')";
            System.out.println(sqlstr);
            query=dbsession.createSQLQuery(sqlstr);
            int stat=query.executeUpdate();
        } 
        
        pics.put(props[0] + "_" + g, pprops);
    }
    
    for (int g=1; g<5; g++) {
        pprops = new String[4];
        for (int k=0; k<pprops.length; k++) pprops[k] = "";

        sqlstr = "SELECT * FROM clientPromoImages WHERE aPromoUnique='" + props[0] + "_prm' AND aProfile='" + g + "'";
        System.out.println(sqlstr);
        query=dbsession.createSQLQuery(sqlstr).addScalar("aUnique").addScalar("aImage").addScalar("aWidth").addScalar("aHeight");
        java.util.List result5=query.list();
        if (result5.size()>0) {   
            for(Object o5:result5){
                Object[] row5=(Object[]) o5;
            pprops[0] = String.valueOf(row5[0]);
            pprops[1] = String.valueOf(row5[1]);
            pprops[2] = String.valueOf(row5[2]);
            pprops[3] = String.valueOf(row5[3]);
                       }
        }
        else {
            pprops[0] = Misc.generateUniqueId();
            sqlstr = "INSERT INTO clientPromoImages VALUES('" + pprops[0] + "','" + props[0] + "_prm','" + g + "','','0','0')";
            System.out.println(sqlstr);
            query=dbsession.createSQLQuery(sqlstr);
            int stat=query.executeUpdate();
        } 
       
        pics.put(props[0] + "_prm_" + g, pprops);
    }
    
}

trans.commit();
dbsession.close();
%>
